" -- Generic config stuff --
:syntax enable
:set hlsearch
:set incsearch
:set scrolloff=7
:set autoindent
:set shiftwidth=4
:set softtabstop=4
:set expandtab
:set colorcolumn=80
:set nu
filetype on
filetype plugin on
:let mapleader = ","
" Webpack workaround
" https://github.com/webpack/webpack/issues/781
:set backupcopy=yes

" -- Color theme --
if has('gui_running')
    :colorscheme solarized
    set background=dark
    let g:solarized_diffmode="high"
else
    :colorscheme darkblue
endif


" --  Lint --
" Display error for non-breaking space or trailing space
au VimEnter,BufWinEnter * syn match ErrorMsg " "
au VimEnter,BufWinEnter * syn match ErrorMsg " $"


" -- Keyboard shortcuts --
" Ctrl+Tab to move between splits
map <C-Tab> <C-W>w
" F10 for paste toggle (toggle paste mode)
:set pastetoggle=<F10>


" -- NERDTree --
map <F2> :NERDTreeToggle<CR>

" Start NERDTree. If a file is specified, move the cursor to its window.
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * NERDTree | if argc() > 0 || exists("s:std_in") | wincmd p | endif
" Exit Vim if NERDTree is the only window remaining in the only tab.
autocmd BufEnter * if tabpagenr('$') == 1 && winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | quit | endif
" Close the tab if NERDTree is the only window remaining in it.
autocmd BufEnter * if winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | call feedkeys(":quit\<CR>:\<BS>") | endif
" If another buffer tries to replace NERDTree, put it in the other window, and bring back NERDTree.
autocmd BufEnter * if winnr() == winnr('h') && bufname('#') =~ 'NERD_tree_\d\+' && bufname('%') !~ 'NERD_tree_\d\+' && winnr('$') > 1 |
    \ let buf=bufnr() | buffer# | execute "normal! \<C-W>w" | execute 'buffer'.buf | endif
" Open the existing NERDTree on each new tab.
autocmd BufWinEnter * if &buftype != 'quickfix' && getcmdwintype() == '' | silent NERDTreeMirror | endif




" Shortcuts to move between tabs with Ctrl+Shift+Left/Right
" https://stackoverflow.com/a/48112110
function TabLeft()
   if tabpagenr() == 1
      execute "tabm"
   else
      execute "tabm -1"
   endif
endfunction

function TabRight()
   if tabpagenr() == tabpagenr('$')
      execute "tabm" 0
   else
      execute "tabm +1"
   endif
endfunction

map <silent><C-S-Right> :execute TabRight()<CR>
map <silent><C-S-Left> :execute TabLeft()<CR>

" Refresh NERDTree on write
" http://superuser.com/a/1142059/464608
autocmd BufWritePost * NERDTreeFocus | execute 'normal R' | wincmd p


" -- NERDCommenter --
" https://github.com/scrooloose/nerdcommenter
" Align line-wise comment delimiters flush left
" instead of following code indentation
let g:NERDDefaultAlign = 'start'
" Allow commenting and inverting empty lines (useful when commenting a region)
let g:NERDCommentEmptyLines = 1
map <silent><C-C> <Plug>NERDCommenterComment
map <silent><C-D> <Plug>NERDCommenterUncomment


" -- Local settings --
if filereadable(glob('~/.vimrc_local'))
    source ~/.vimrc_local
endif
